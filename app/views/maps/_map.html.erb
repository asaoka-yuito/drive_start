
<h2>gmap</h2>

<input id="address" type="textbox" value="GeekSalon">
<input type="button" value="Encode" onclick="codeAddress()">

<div id="display">何かが表示される、、、、！</div>

<div id='map'></div>

<style>
#map {
  height:300px;
  width: 300px;
}
</style>

<script>
let map

let geocoder

const display = document.getElementById('display')

function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    //latが緯度、lngが経度
    center: {lat: 40.7828, lng:-73.9653},
     //数値は0〜21まで指定できます。数値が大きいほど拡大されます
    zoom: 12,
  });

  marker = new google.maps.Marker({
    //positionに指定した座標にピンを表示させます
    position:  {lat: 40.7828, lng:-73.9653},
    map: map
  });
  
  <% @maps.each do |m| %>
    (function(){
      var contentString = "住所：<%= m.address %>"; 
        // マーカーを立てる
        var marker = new google.maps.Marker({
          // position:{lat: <%= m.latitude %>, lng: <%= m.longitude %>},
          map: map,
          title: contentString
        });

        // 情報ウィンドウ(吹き出し)の定義
        // 投稿の詳細ページへのリンクも
        var infowindow = new google.maps.InfoWindow({
          // position: {lat: <%= m.latitude %>, lng: <%= m.longitude %>},
          content: "<a href='<%= map_url(m.id) %>' target='_blank'><%= m.address %></a>"
        });

        // クリックしたときに情報ウィンドウを表示
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });
    })();
  <% end %>
}

function codeAddress(){
  let inputAddress = document.getElementById('address').value;

  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
      map.setCenter(results[0].geometry.location);
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
      display.textContent = "検索結果：" + results[ 0 ].geometry.location
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });   
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>
<h3>場所投稿フォーム</h3>
<%= form_for(@map, :url => { controller:'maps', action:'create'})do |f| %>

    <p>
    <%= f.label :address %>
    <%= f.text_field :address, size: "50x1" %>
    </p>

    <%= f.submit "送信"%>
<% end %>

<h3>場所一覧</h3>
<% @maps.each do |t| %>
    <p>住所 : <%= t.address %></p>
    <p>緯度 : <%= t.latitude %></p>
    <p>経度 : <%= t.longitude %></p>
    <p><%= link_to "削除する", map_path(t.id), method: :delete %></p>
    <hr>
<% end %>